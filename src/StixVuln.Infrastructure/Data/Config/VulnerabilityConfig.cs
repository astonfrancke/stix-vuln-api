using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;
using StixVuln.Core.Vulnerability;

namespace StixVuln.Infrastructure.Data.Config;
public class VulnerabilityConfig : IEntityTypeConfiguration<Vulnerability>
{
    public void Configure(EntityTypeBuilder<Vulnerability> builder)
    {
        ConfigureVulnerabilitiesTable(builder);
        ConfigureExternalReferencesTable(builder);
    }

    private void ConfigureVulnerabilitiesTable(EntityTypeBuilder<Vulnerability> builder)
    {
        builder.ToTable("Vulnerabilities");

        builder.HasKey(m => m.Id);
        builder.Property(m => m.Id)
            .ValueGeneratedNever();

        builder.Property(m => m.Name)
            .IsRequired();
    }

    private void ConfigureExternalReferencesTable(EntityTypeBuilder<Vulnerability> builder)
    {
        builder.OwnsMany(v => v.ExternalReferences, exRefB =>
        {
            exRefB.ToTable("ExternalReferences");
            exRefB.WithOwner().HasForeignKey("Id");
            exRefB.HasKey(nameof(ExternalReference.ExternalReferenceId), "ExternalReferenceId");
        });
    }
}
